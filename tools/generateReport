#!/bin/bash

# Generate reduced test suites for FF experiments

# last : Mar 14 2017

# $1 = System folder
# $2 = where to place produced files

if [ "$#" -ne 2 ]; then
    echo "  \$1 = System folder"
    echo "  \$2 = where to place produced files"
    exit
fi

source config.sh $1 $2

systems=`ls $1`
sysRoot=`basename $1`
header="\033[0;35m[generateReport]\033[0m"

max_parallel=$config_n_cores

mkdir $2/results 2> /dev/null
mkdir $2/results/$sysRoot 2> /dev/null

# for each system
for sys in $systems; do
	base=`ls $1/$sys | grep "lus" | grep -v "obligations" | rev | cut -c 5- | rev`

	mkdir $2/results/$sysRoot/$sys/ 2> /dev/null

    for cov in ${config_coverage[@]}; do
        if [ "$config_universal_suite" == "true" ]; then
            trace_dir="${base}.obc_tests.csv"
        else
            trace_dir="${base}.${cov}_tests.csv"
        fi

        mutant_list=$2/traces/$sysRoot/$sys/$base.${cov}_tests.csv/$base.$cov".mutants.csv"
		ls $2/traces/$sysRoot/$sys/$trace_dir | grep "mutated" > $mutant_list

		numMutants=`cat $mutant_list | wc -l`
		if [ "$numMutants" -eq "0" ]; then
            echo -e "$header ERROR: No mutants!"
            continue
        fi

        correct_trace=$2/traces/$sysRoot/$sys/$trace_dir/$base.correct_trace.csv
        reduced_suite=$2/suites/$sysRoot/$sys/reduced/$base.${cov}_tests_reduced.csv
        oracles=$1/$sys/$base".ff_oracles.csv"
        output_file=$2/results/$sysRoot/$sys/$base.$cov

        # if OBC, analyze for all binary versions
        if [ "$cov" == "obc" ]; then
            bins=`ls $2/obc/$sysRoot/$sys/bin | grep -v "\." | grep -v "make"`
            for bin in $bins; do    # for each binary
                for obc_type in ${config_obc_types[@]}; do  # for each variant of OBC
                    reduced_suite=$2/suites/$sysRoot/$sys/reduced/$base".obc_${bin}_${obc_type}_tests_reduced.csv"
                    output_file=$2/results/$sysRoot/$sys/$base.$cov"_"$bin"_"$obc_type
                    echo -e "$header Analyzing $cov - $bin ($obc_type)"
                    ./ff_analyzer $correct_trace $mutant_list $reduced_suite $oracles $output_file &
                    sleep 1
                    while [ `jobs | wc -l` -ge $max_parallel ]; do
                        sleep 1
                    done
                done
            done
            continue
        else
            echo -e "$header Analyzing $cov"
            ./ff_analyzer $correct_trace $mutant_list $reduced_suite $oracles $output_file &
            sleep 1
            while [ `jobs | wc -l` -ge $max_parallel ]; do
                sleep 1
            done
        fi 
	done
done

wait

echo -e "$header ./measureReducedObc.py $1 $2 $base"
./measureReducedObc.py $1 $2 $base

sysname=`basename $1`
echo -e "$header ./mergeReports.py $2/results/$sysname"
./mergeReports.py $2/results/$sysname

